---
import type { MarkdownHeading } from 'astro'
import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'ul'> & {
  headings: MarkdownHeading[]
}

const { headings, class: className, ...props } = Astro.props
---

<script>
class TocItem extends HTMLElement {
  anchor = this.querySelector('a')

  constructor() {
    super()
    if (!this.anchor) {
      return
    }
    this.handleUpdate()
    window.addEventListener('hashchange', this.handleUpdate)
  }

  handleUpdate = () => {
    if (decodeURIComponent(window.location.hash) === this.anchor?.getAttribute('href')) {
      this.anchor.classList.add('active')
    }
    else {
      this.anchor?.classList.remove('active')
    }
  }
}

customElements.define('toc-item', TocItem)
</script>

<ul class:list={['menu flex flex-col gap-2 flex-nowrap', className]} {...props}>
{
    headings.map(({ slug, text, depth }) => (
        <toc-item>
            <li>
                <a href={`#${slug}`}>
                    <label style={{ paddingLeft: `${(depth - 1)}rem` }}>
                        {text}
                    </label>
                </a>
            </li>
        </toc-item>
    ))
}
</ul>
